[{"C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\index.js":"1","C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\reportWebVitals.js":"2","C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\App.js":"3","C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\pages\\LoginPage.jsx":"4","C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\components\\CustomerListItem.jsx":"5","C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\pages\\CustomerDetailPage.jsx":"6","C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\pages\\CustomerCreatePage.jsx":"7","C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\pages\\CustomerUpdatePage.jsx":"8","C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\pages\\HomePage.jsx":"9","C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\contexts\\UserContext.js":"10","C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\data\\FetchKit.js":"11","C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\data\\fetchKit.js":"12","C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\pages\\ProfilePage.jsx":"13","C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\data\\form@.js":"14","C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\components\\FormDisplay.jsx":"15","C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\components\\FormEdit.jsx":"16","C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\components\\Navbar.jsx":"17","C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\data\\formRequirements.js":"18"},{"size":636,"mtime":1610726631153,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":2519,"mtime":1610885625632,"results":"22","hashOfConfig":"20"},{"size":2034,"mtime":1610803378483,"results":"23","hashOfConfig":"20"},{"size":372,"mtime":1610818923057,"results":"24","hashOfConfig":"20"},{"size":1966,"mtime":1610804998494,"results":"25","hashOfConfig":"20"},{"size":1566,"mtime":1610885321454,"results":"26","hashOfConfig":"20"},{"size":2104,"mtime":1610885353368,"results":"27","hashOfConfig":"20"},{"size":1148,"mtime":1610818966634,"results":"28","hashOfConfig":"20"},{"size":83,"mtime":1610593002357,"results":"29","hashOfConfig":"20"},{"size":1959,"mtime":1610572554392,"results":"30","hashOfConfig":"20"},{"size":2587,"mtime":1610786801985,"results":"31","hashOfConfig":"20"},{"size":794,"mtime":1610818750378,"results":"32","hashOfConfig":"20"},{"size":1039,"mtime":1610810572292,"results":"33","hashOfConfig":"20"},{"size":1229,"mtime":1610792948537,"results":"34","hashOfConfig":"20"},{"size":2026,"mtime":1610887733499,"results":"35","hashOfConfig":"20"},{"size":1816,"mtime":1610803467990,"results":"36","hashOfConfig":"20"},{"size":1516,"mtime":1610886002660,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"18xjips",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\index.js",[],["78","79"],"C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\reportWebVitals.js",[],"C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\App.js",["80"],"C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\pages\\LoginPage.jsx",["81"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { UserContext } from '../contexts/UserContext'\r\nimport FetchKit from '../data/fetchKit'\r\n\r\nexport default function LoginPage() {\r\n    const [ formData, setFormData ] = useState({\r\n        email: \"Dino.Pacariz@yh.nackademin.se\",\r\n        password: \"javascriptoramverk\"\r\n    })\r\n    const [ loginStatus , setLoginStatus ] = useState({successful: true})\r\n    const { loggedIn, setLoggedIn, history, setUserInfo } = useContext(UserContext)\r\n\r\n    function handleOnSubmit(e) {\r\n        e.preventDefault()\r\n        const payload = {\r\n            email: formData.email,\r\n            password: formData.password\r\n        }\r\n        \r\n        FetchKit.login(payload)\r\n        .then(data => {\r\n            if (data) {\r\n                localStorage.setItem(\"token\", data.token)\r\n                setLoggedIn(true)\r\n                getUserInfo()\r\n            }\r\n            else {\r\n                setLoginStatus({successful: false})\r\n            }\r\n        })\r\n    }\r\n\r\n    function getUserInfo() {\r\n        FetchKit.getCurrentUserInfo()\r\n        .then(data => {\r\n            if (data) {\r\n                setLoggedIn(true)\r\n                setUserInfo(data)\r\n            }\r\n        })\r\n    }\r\n    \r\n    function handleOnChange(e) {\r\n        setFormData({...formData, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(loggedIn) {\r\n            history.push('/home')\r\n        }\r\n    }, [loggedIn])\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleOnSubmit}>\r\n                <label>Email</label>\r\n                <input name=\"email\" onChange={handleOnChange} />\r\n                <label>Password</label>\r\n                <input name=\"password\" onChange={handleOnChange} />\r\n                <button type=\"submit\">Log in</button>\r\n                {loginStatus.successful === false &&\r\n                    <p>Login failed, please enter a valid Email {\"&\"} Password </p>\r\n                }\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\components\\CustomerListItem.jsx",[],"C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\pages\\CustomerDetailPage.jsx",["82"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport FormDisplay from '../components/FormDisplay'\r\nimport { UserContext } from '../contexts/UserContext'\r\nimport FetchKit from '../data/fetchKit'\r\n\r\nexport default function CustomerDetailPage(props) {\r\n    const customerId = props.match.params.id\r\n    const [ customerItem, setCustomerItem ] = useState(null)\r\n    const [ itemExists, setItemExists] = useState(true)\r\n    const { history , setListUpToDate, setTempCustomer } = useContext(UserContext)\r\n\r\n    function getCustomerItem() {\r\n        FetchKit.getCustomerItem(customerId)\r\n        .then(data => {\r\n            if(data) {\r\n                setCustomerItem(data)\r\n                setTempCustomer(data)\r\n            }\r\n            else {\r\n                setItemExists(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    function deleteCustomer() {\r\n        setListUpToDate(false)\r\n        FetchKit.deleteCustomerItem(customerId)\r\n        .then(() => history.push('/home'))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCustomerItem()\r\n    }, [])\r\n    \r\n    return (\r\n        <div>\r\n            {!itemExists && (\r\n            <>\r\n                <p>This customer doesn't exist.</p>\r\n                <Link to={\"/home\"}>Go back.</Link>\r\n            </>\r\n            )}\r\n            {customerItem\r\n                ?(\r\n                    <div>\r\n                        <h1>{customerItem.name}</h1>\r\n                        <FormDisplay data={customerItem} />\r\n                        <button onClick={deleteCustomer}>Delete Customer</button>\r\n                        <Link to={`/customers/${customerId}/edit`}>\r\n                            <button>Update Customer</button>\r\n                        </Link>\r\n                    </div>\r\n                )\r\n                :(\r\n                    <>{itemExists && <span>Loading Data...</span>}</>\r\n                )       \r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\pages\\CustomerCreatePage.jsx",[],"C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\pages\\CustomerUpdatePage.jsx",["83"],"C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\pages\\HomePage.jsx",["84"],"import React, { useContext, useEffect } from 'react'\r\nimport CustomerListItem from '../components/CustomerListItem'\r\nimport { UserContext } from '../contexts/UserContext'\r\nimport FetchKit from '../data/fetchKit'\r\n\r\nexport default function HomePage() {\r\n    const { customerList, setCustomerList, listUpToDate, setListUpToDate } = useContext(UserContext)\r\n    \r\n    useEffect(() => {\r\n        if (!listUpToDate) {\r\n            getCustomerList()\r\n        }\r\n    }, [])\r\n\r\n    function getCustomerList() {\r\n        FetchKit.getCustomerList()\r\n        .then(data => {\r\n            if (data) {\r\n                setCustomerList(data.results)\r\n                setListUpToDate(true)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"mb-5 text-center\">Customers</h1>\r\n            {listUpToDate\r\n                ?(\r\n                    customerList.map((item) => {\r\n                        return <CustomerListItem key={item.id} customerData={item} />\r\n                    })\r\n                )\r\n                :(\r\n                    <p>Loading...</p>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\contexts\\UserContext.js",[],"C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\data\\FetchKit.js",["85"],"C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\data\\fetchKit.js",[],"C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\pages\\ProfilePage.jsx",[],"C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\data\\form@.js",[],"C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\components\\FormDisplay.jsx",[],"C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\components\\FormEdit.jsx",[],"C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\components\\Navbar.jsx",[],"C:\\Users\\dinop\\Documents\\GitHub\\react-inlamningsuppgift\\src\\data\\formRequirements.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":34,"column":6,"nodeType":"92","endLine":34,"endColumn":8,"suggestions":"93"},{"ruleId":"90","severity":1,"message":"91","line":51,"column":8,"nodeType":"92","endLine":51,"endColumn":18,"suggestions":"94"},{"ruleId":"90","severity":1,"message":"95","line":34,"column":8,"nodeType":"92","endLine":34,"endColumn":10,"suggestions":"96"},{"ruleId":"90","severity":1,"message":"97","line":27,"column":8,"nodeType":"92","endLine":27,"endColumn":10,"suggestions":"98"},{"ruleId":"90","severity":1,"message":"99","line":13,"column":8,"nodeType":"92","endLine":13,"endColumn":10,"suggestions":"100"},{"ruleId":"101","severity":2,"message":"102","line":39,"column":40,"nodeType":"103","messageId":"104","endLine":39,"endColumn":50},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["107"],["108"],"React Hook useEffect has a missing dependency: 'getCustomerItem'. Either include it or remove the dependency array.",["109"],"React Hook useEffect has missing dependencies: 'customerId', 'getCustomerItem', and 'tempCustomer'. Either include them or remove the dependency array.",["110"],"React Hook useEffect has missing dependencies: 'getCustomerList' and 'listUpToDate'. Either include them or remove the dependency array.",["111"],"no-undef","'customerId' is not defined.","Identifier","undef","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [history]",{"range":"122","text":"123"},"Update the dependencies array to be: [history, loggedIn]",{"range":"124","text":"125"},"Update the dependencies array to be: [getCustomerItem]",{"range":"126","text":"127"},"Update the dependencies array to be: [customerId, getCustomerItem, tempCustomer]",{"range":"128","text":"129"},"Update the dependencies array to be: [getCustomerList, listUpToDate]",{"range":"130","text":"131"},[1197,1199],"[history]",[1470,1480],"[history, loggedIn]",[1100,1102],"[getCustomerItem]",[973,975],"[customerId, getCustomerItem, tempCustomer]",[463,465],"[getCustomerList, listUpToDate]"]